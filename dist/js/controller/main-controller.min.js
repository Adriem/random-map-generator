var hasProp={}.hasOwnProperty;$(document).ready(function(){var e,t,i,o,r,a,n,l,m,s;r=!1,e=new CanvasController("canvas"),l=null,m={tilesPerUnit:new NumericInput("tilesPerUnit","Tiles per unit",1),wallStyle:new SelectInput("wallStyle","Wall style",wallStyle),drawGrid:new ToggleInput("drawGrid","Draw grid")},t={mapSize:new NumericInput("mapSize","Map size (units)",5),numberOfRooms:new NumericInput("numberOfRooms","Number of rooms",1),initialRoomW:new NumericInput("initialRoomW","Initial room width",1),initialRoomH:new NumericInput("initialRoomH","Initial room height",1),minRoomSize:new NumericInput("minRoomSize","Min. room size",1),maxRoomSize:new NumericInput("maxRoomSize","Max. room size",1),minArea:new ToggleableNumericInput("minArea","Min. room area",1),maxArea:new ToggleableNumericInput("maxArea","Max. room area",1),ratioRestr:new ToggleableNumericInput("ratioRestr","Ratio restr.",.5,1,.1)},a=function(){var i;return i=[],l=generate(t.numberOfRooms.get(),{width:t.mapSize.get(),height:t.mapSize.get(),initialRoomWidth:t.initialRoomW.get(),initialRoomHeight:t.initialRoomH.get(),minRoomSize:t.minRoomSize.get(),maxRoomSize:t.maxRoomSize.get(),ratioRestriction:t.ratioRestr.getToggleState()?t.ratioRestr.getValue():void 0,maxRoomArea:t.maxArea.getToggleState()?t.maxArea.getValue():void 0,minRoomArea:t.minArea.getToggleState()?t.minArea.getValue():void 0},function(e,t){return console.log("Step #"+t+": ",e.roomList),i.push(e)}),o(e,i)},i=function(e,t){var i,o,r,a,n;for($("#room-list").empty(),r=t.roomList,i=0,o=r.length;o>i;i++)a=r[i],$("#room-list").append("<div><strong>Room #"+a.id+": </strong> {\n  x: "+a.x+", y: "+a.y+", width: "+a.width+", height: "+a.height+"\n}</div>");return n=t.getTilemap(m.tilesPerUnit.get()),e.drawMap(n,m.drawGrid.get(),m.wallStyle.get())},o=function(e,t,a){return null==a&&(a=0),$("#generate").attr("disabled",""),r=!0,i(e,t.shift()),t.length>0?setTimeout(function(){return o(e,t)},250):($("#generate").removeAttr("disabled",""),r=!1)};for(n in m)hasProp.call(m,n)&&(s=m[n],$("#renderer-controls").append(s.html));for(n in t)hasProp.call(t,n)&&(s=t[n],$("#generator-controls").append(s.html));return $("#generate").click(a),$('[data-togle="tooltip"]').tooltip(),t.mapSize.set(Defaults.MAP_SIZE),t.numberOfRooms.set(Defaults.NUMBER_OF_ROOMS),t.initialRoomW.set(Defaults.INITIAL_ROOM_WIDTH),t.initialRoomH.set(Defaults.INITIAL_ROOM_HEIGHT),t.minRoomSize.set(Defaults.MIN_ROOM_SIZE),t.maxRoomSize.set(Defaults.MAX_ROOM_SIZE),t.minArea.set(Defaults.MIN_ROOM_AREA),t.minArea.toggle(!0),t.maxArea.set(Defaults.MAX_ROOM_AREA),t.maxArea.toggle(!1),t.ratioRestr.set(Defaults.RATIO_RESTRICTION),t.ratioRestr.toggle(!1),m.tilesPerUnit.set(Defaults.TILES_PER_UNIT),m.wallStyle.set(2),m.drawGrid.set(!0),m.tilesPerUnit.setListener(function(){return r?void 0:i(e,l)}),m.wallStyle.setListener(function(){return r?void 0:i(e,l)}),m.drawGrid.setListener(function(){return r?void 0:i(e,l)}),t.maxArea.setToggleListener(function(){return t.maxArea.toggle(t.maxArea.getToggleState())}),t.minArea.setToggleListener(function(){return t.minArea.toggle(t.minArea.getToggleState())}),t.ratioRestr.setToggleListener(function(){return t.ratioRestr.toggle(t.ratioRestr.getToggleState())}),a()});