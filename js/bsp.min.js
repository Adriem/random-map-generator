var Tree,cfg,generateDoors,generateMap,generatePaths,generateRooms,spawnRoom,split;cfg={RATIO_RESTR:.45,PARTITION_LEVEL:2,ROOM_REDUCTION:.3,MIN_ROOM_SIZE:5,MAX_ROOM_SIZE:20,MIN_SECTOR_REDUCTION:2,MIN_SECTOR_SIZE:10,MAX_SECTOR_SIZE:24,BIG_ROOM_CHANCE:60,ROOM_DELETING_RATIO:.4,DOOR_CHANCE:100},Tree=function(){function e(e){this.node=e,this.childs=[]}return e.prototype.isEmpty=function(){return null==this.node},e.prototype.isLeaf=function(){return 0===this.childs.length},e.prototype.getLeafs=function(){var e,t,n,r,i;if(this.isLeaf())return[this];for(i=[],r=this.childs,t=0,n=r.length;n>t;t++)e=r[t],i=i.concat(e.getLeafs());return i},e.prototype.getNodeList=function(){var e,t,n,r,i;for(i=[this.node],r=this.childs,t=0,n=r.length;n>t;t++)e=r[t],i=i.concat(e.getNodeList());return i},e.prototype.kill=function(){return this.childs=[],this.node=void 0},e.prototype.removeDeadLeafs=function(){var e,t,n,r;if(!this.isLeaf())for(r=this.childs,t=n=r.length-1;n>=0;t=n+=-1)e=r[t],e.removeDeadLeafs(),e.isLeaf()&&e.isEmpty()&&this.childs.splice(t,1);return void 0},e.prototype.grow=function(t){var n,r,i,o,s;if(n=t(this.node),null!=n&&0<(s=n.length)&&1>=s)this.node=n[0];else if(null!=n&&n.length>1)for(r=0,i=n.length;i>r;r++)o=n[r],this.childs.push(new e(o).grow(t));return this},e.prototype.paint=function(e){var t,n,r,i,o,s;for(s=TILE_SIZE(),e.beginPath(),e.strokeStyle="#0f0",e.lineWidth=6,e.strokeRect(this.node.x*s,this.node.y*s,this.node.w*s,this.node.h*s),i=this.childs,o=[],n=0,r=i.length;r>n;n++)t=i[n],o.push(t.paint(e));return o},e}(),generateMap=function(e){var t,n,r,i;return cfg.MIN_SECTOR_SIZE=2*cfg.MIN_ROOM_SIZE,cfg.MAX_SECTOR_SIZE=cfg.MAX_ROOM_SIZE+2*cfg.MIN_SECTOR_REDUCTION,r=new TileMap(e,e),i=new Tree(new Rect(0,0,e,e)).grow(split),n=generateRooms(i,r),i.removeDeadLeafs(),t=generatePaths(i,r),r.removeDeadEnds(),generateDoors(r.tilemap),r.optimiseDoors(),r.drawWalls(),r.debug.tree=i,r},spawnRoom=function(e){var t,n,r,i;return e.w<e.h?(n=random.value(cfg.MIN_ROOM_SIZE,e.w-2*cfg.MIN_SECTOR_REDUCTION),t=e.h-(e.w-n)):(t=random.value(cfg.MIN_ROOM_SIZE,e.h-2*cfg.MIN_SECTOR_REDUCTION),n=e.w-(e.h-t)),r=e.x+Math.floor((e.w-n)/2),i=e.y-e.x+r,new Rect(r,i,n,t)},generateRooms=function(e,t){var n,r,i,o,s,a,f,h,l,c,R;for(l=[],a=e.getLeafs(),c=Math.round(a.length*cfg.ROOM_DELETING_RATIO),R=i=0,h=c;h>=0?h>i:i>h;R=h>=0?++i:--i)r=random.value(a.length),a[r].kill(),a.splice(r,1);for(n=o=0,f=a.length;f>o;n=++o)s=a[n],l[n]=spawnRoom(s.node),t.drawRect(l[n]);return l},generatePaths=function(e,t){var n,r,i,o,s,a,f,h,l;for(h=[],l=e.getNodeList(),r=i=0,s=l.length;s>i;r=++i)n=l[r],h.push(new Path(l[r].center,l[(r+1)%l.length].center));for(o=0,a=h.length;a>o;o++)f=h[o],t.drawPath(f);return h},generateDoors=function(e){var t,n,r,i,o,s,a,f,h,l,c,R,g,O,_,E,I,u,d,N,T,p,M,L;for(t=3,n=[],r=o=R=t,g=e.length-t;g>=R?g>o:o>g;r=g>=R?++o:--o)for(i=s=E=t,I=e[r].length-t;I>=E?I>s:s>I;i=I>=E?++s:--s)if(e[r][i]===tile.GROUND){if(L=[0,0,0,0],e[r-1][i]===(u=e[r+1][i])&&u===tile.NULL&&e[r][i-1]===(d=e[r][i+1])&&d===tile.GROUND){for(f=a=N=-t;-1>=N?-1>=a:a>=-1;f=-1>=N?++a:--a)e[r-1][i+f]!==tile.NULL&&L[0]++,e[r+1][i+f]!==tile.NULL&&L[1]++;for(f=h=1,T=t;T>=1?T>=h:h>=T;f=T>=1?++h:--h)e[r-1][i+f]!==tile.NULL&&L[2]++,e[r+1][i+f]!==tile.NULL&&L[3]++}else if(e[r][i-1]===(p=e[r][i+1])&&p===tile.NULL&&e[r-1][i]===(M=e[r+1][i])&&M===tile.GROUND){for(f=l=O=-t;-1>=O?-1>=l:l>=-1;f=-1>=O?++l:--l)e[r+f][i-1]!==tile.NULL&&L[0]++,e[r+f][i+1]!==tile.NULL&&L[1]++;for(f=c=1,_=t;_>=1?_>=c:c>=_;f=_>=1?++c:--c)e[r+f][i-1]!==tile.NULL&&L[2]++,e[r+f][i+1]!==tile.NULL&&L[3]++}(L[0]>=t||L[1]>=t||L[2]>=t||L[3]>=t)&&random.test(cfg.DOOR_CHANCE)&&(e[r][i]=tile.DOOR,n.push(new Point(i,r)))}return n},split=function(e,t,n){var r,i,o;if(null==t&&(t=random.test()),null==n&&(n=cfg.PARTITION_LEVEL),t){if(e.h/e.w<2*cfg.RATIO_RESTR)return split(e,!t,n);if(0===n||e.h<2*cfg.MIN_SECTOR_SIZE||e.h<cfg.MAX_SECTOR_SIZE&&random.test(cfg.BIG_ROOM_CHANCE))return[e];o=Math.max(cfg.MIN_SECTOR_SIZE,Math.ceil(e.h*cfg.RATIO_RESTR)),r=new Rect(e.x,e.y,e.w,random.value(o,e.h-o)),i=new Rect(e.x,e.y+r.h,e.w,e.h-r.h)}else{if(e.w/e.h<2*cfg.RATIO_RESTR)return split(e,!t,n);if(0===n||e.w<2*cfg.MIN_SECTOR_SIZE||e.w<cfg.MAX_SECTOR_SIZE&&random.test(cfg.BIG_ROOM_CHANCE))return[e];o=Math.max(cfg.MIN_SECTOR_SIZE,Math.ceil(e.w*cfg.RATIO_RESTR)),r=new Rect(e.x,e.y,random.value(o,e.w-o),e.h),i=new Rect(e.x+r.w,e.y,e.w-r.w,e.h)}return split(r,!t,n-1).concat(split(i,!t,n-1))},this.bsp={config:cfg,generate:generateMap,Tree:Tree};